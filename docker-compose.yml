version: '2'

services:
    consul:
        image: gliderlabs/consul-server
        command: -bootstrap -bind=127.0.0.1 -recursor=8.8.8.8
        ports:
        - 8400:8400
        - 8500:8500
        - 8600:8600/udp
        # - 53:8600/udp -> Use this to bind consul to the DNS port and use DNS resolution
    registrator:
        image: gliderlabs/registrator
        depends_on:
        - consul
        network_mode: host
        volumes:
        - /var/run/docker.sock:/tmp/docker.sock
        command: -internal=true consul://localhost:8500

    # This is a standard consul-template usage
    # consul-template:
    #    build: .
    #    depends_on:
    #    - consul
    #    links:
    #    - consul
    #    volumes:
    #    - /etc/haproxy
    #    - /etc/consul-template
    #    environment:
    #    - 'NODE_CONFIG={"consul":{"host":"consul"},"templates":[{"source":"templates/haproxy.cnf.njk","path":"dump","filename":"haproxy.cfg","command":"/usr/bin/haproxy -D -p /var/run/haproxy.pid  -f /etc/haproxy/haproxy.cfg -sf $$(cat /var/run/haproxy.pid) || true" }, { "source": "templates/certificates.sh.njk", "path": "dump/", "filename": "certificates.sh", "command": "chmod +x dump/certificates.sh && dump/certificates.sh" } ]}'

    # Autoconfigured haproxy
    consul-template-haproxy:
        build:
            context: .
            dockerfile: Dockerfile-haproxy
        depends_on:
        - consul
        links:
        - consul
        ports:
        - 80
        volumes:
        - ./dump:/app/dump
        - /etc/haproxy
        - /etc/consul-template
        - ./templates/haproxy.cnf.njk:/app/templates/haproxy.cnf.njk
        environment:
        - 'NODE_CONFIG={"consul":{"host":"consul"},"templates":[{"source":"templates/haproxy.cnf.njk","path":"dump","filename":"haproxy.cfg","command":"haproxy -D -p /var/run/haproxy.pid  -f /app/dump/haproxy.cfg -sf $$(cat /var/run/haproxy.pid) || true" }]}'

    # Autoconfigration of letsencrypt certificates
    consul-template-cerbot:
        build:
            context: .
            dockerfile: Dockerfile-cerbot
        depends_on:
        - consul
        links:
        - consul
        ports:
        - 80
        volumes:
        - ./dump:/app/dump
        - ./dump/certs:/etc/letsencrypt/live
        - ./templates/certificates.sh.njk:/app/templates/certificates.sh.njk
        environment:
        - 'NODE_CONFIG={"consul":{"host":"consul"},"templates":[{ "source": "templates/certificates.sh.njk", "path": "/app/dump", "filename": "certificates.sh", "command": "chmod +x dump/certificates.sh && dump/certificates.sh" }]}'


    # Testing containers
    whoami1:
        image: emilevauge/whoami
        ports:
        - 80
        environment:
        - 'SERVICE_TAGS=VIRTUAL_HOST=whoami.example.com,SSL_VIRTUAL_HOST=whoami.example.com,SSL_EMAIL=info@example.com'
    whoami2:
        image: emilevauge/whoami
        ports:
        - 80
        environment:
        - 'SERVICE_TAGS=VIRTUAL_HOST=whoami.example.com,SSL_VIRTUAL_HOST=whoami.example.com,SSL_EMAIL=info@example.com'
    whoami3:
        image: emilevauge/whoami
        ports:
        - 80
        environment:
        - 'SERVICE_TAGS=VIRTUAL_HOST=whoami.example.com,SSL_VIRTUAL_HOST=whoami.example.com,SSL_EMAIL=info@example.com'
